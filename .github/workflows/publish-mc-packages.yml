name: Publish Hazelcast Management Center packages

on:
  push:
    # Push to master updates the latest snapshot (MC_VERSION taken from pom.xml)
    branches:
      - master
    # Push of a matching tag (v*, e.g. v5.0.2) starts build with
    # - MC_VERSION extracted from pom.xml
    # - PACKAGE_VERSION extracted from the tag
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:
    inputs:
      MC_VERSION:
        type: string
        description: 'Version of Hazelcast Management Center to build the image for, this is the Maven version - e.g.: 5.0.2 or 5.1-SNAPSHOT'
        required: true
      package_types:
        description: 'Packages to build'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - deb
        - rpm
        - homebrew

env:
  EVENT_NAME: ${{ github.event_name }}
  PUBLISH: "true"
  JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}
  DEVOPS_PRIVATE_KEY: ${{ secrets.DEVOPS_PRIVATE_KEY }}
  BINTRAY_PASSPHRASE: ${{ secrets.BINTRAY_PASSPHRASE }}
  HZ_LICENSEKEY: ${{ secrets.HZ_LICENSEKEY }}

# Constant for now - should ensure single build, maybe we can limit this to something from github.*
concurrency: single-build

jobs:
  prepare:
    runs-on: ubuntu-latest
    env:
      MC_VERSION: ${{ inputs.MC_VERSION }}
    defaults:
      run:
        working-directory: ./management-center-packaging
    outputs:
      mc_version: ${{ steps.mc_version.outputs.mc_version }}
      package_version: ${{ steps.package_version.outputs.package_version }}
      package_types: ${{ inputs.package_types || 'all' }}
    steps:
      - name: Checkout management-center-packaging repo
        uses: actions/checkout@v4
        with:
          path: 'management-center-packaging'

      - name: Set MC_VERSION
        id: mc_version
        run: |
          if [ -z "${{ env.MC_VERSION }}" ]; then
            MC_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          fi
          echo "MC_VERSION=$MC_VERSION" >> $GITHUB_ENV
          echo "mc_version=$MC_VERSION" >> $GITHUB_OUTPUT

      - name: Set PACKAGE_VERSION
        id: package_version
        # If the ref is version (e.g. v5.0.1) tag then use it as package version,
        # otherwise use MC_VERSION for package version (e.g 5.1-SNAPSHOT)
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/v"* ]]; then
            PACKAGE_VERSION=$(echo ${{ github.ref }} | cut -c 12-)
          else
            PACKAGE_VERSION=${{ env.MC_VERSION }}
          fi
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

  deb:
    runs-on: ubuntu-latest
    container:
      image: debian:stable
    if: ${{ needs.prepare.outputs.package_types == 'all' || needs.prepare.outputs.package_types == 'deb' }}
    env:
      MC_VERSION: ${{ needs.prepare.outputs.mc_version }}
      PACKAGE_VERSION: ${{ needs.prepare.outputs.package_version }}
    defaults:
      run:
        working-directory: ./management-center-packaging
        shell: bash
    needs: [prepare]
    steps:
      - name: Checkout management-center-packaging repo
        uses: actions/checkout@v4
        with:
          path: 'management-center-packaging'

      - name: Install prerequisites
        run: |
          apt-get update
          apt-get install -y curl gettext-base gpg sudo wget

      - name: Download the distribution tar.gz file
        run: |          
          if [[ "${MC_VERSION}" != *SNAPSHOT* ]]; then
            VERSION="${MC_VERSION}"
          else
            VERSION=latest-snapshot
          fi
          MC_PACKAGE_URL="https://repository.hazelcast.com/download/management-center/hazelcast-management-center-${VERSION}.tar.gz"
          echo "MC_PACKAGE_URL=$MC_PACKAGE_URL" >> $GITHUB_ENV
          curl --silent --fail --location "${MC_PACKAGE_URL}" --output hazelcast-management-center-${MC_VERSION}.tar.gz 

      - name: Create & Upload DEB package
        run: |
          ./build-mc-deb-package.sh

      - name: Calculate Debian Repository Metadata
        run: |
          source common.sh

          curl --fail-with-body --retry 3 --retry-delay 10 -H "Authorization: Bearer ${{ secrets.JFROG_TOKEN }}" \
            -X POST "https://repository.hazelcast.com/api/deb/reindex/${DEBIAN_REPO}"

      - name: Install Hazelcast Management Center from DEB
        run: |
          source ./common.sh
          wget -qO - https://repository.hazelcast.com/api/gpg/key/public | gpg --dearmor | sudo tee /usr/share/keyrings/hazelcast-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/hazelcast-archive-keyring.gpg] ${DEBIAN_REPO_BASE_URL} ${PACKAGE_REPO} main" | sudo tee -a /etc/apt/sources.list
          sudo apt update